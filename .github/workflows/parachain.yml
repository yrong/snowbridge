name: parachain

on:
  push:
    paths:
      - "parachain/**"
      - "!parachain/README.md"
      - "!parachain/LICENSE"
    branches:
      - main
  pull_request:
    paths:
      - "parachain/**"
      - "!parachain/README.md"
      - "!parachain/LICENSE"
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('parachain/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - uses: ./.github/actions/install_toolchain

  build:
    needs: prepare
    runs-on: ubuntu-20.04
    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: 1
      RUSTFLAGS: -C debuginfo=1
      SKIP_WASM_BUILD: 1
    steps:
      - name: cargo check
        run: cargo check --manifest-path parachain/Cargo.toml --workspace --features runtime-benchmarks
      - name: cargo test
        run: cargo test --manifest-path parachain/Cargo.toml --workspace --features runtime-benchmarks --exclude snowbridge-query-events --exclude snowbridge-ethereum-beacon-client
      - name: cargo test beacon client
        run: cargo test --manifest-path parachain/Cargo.toml --package snowbridge-ethereum-beacon-client
      - name: cargo test beacon client with mainnet fixtures
        run: cargo test --manifest-path parachain/Cargo.toml --release --features runtime-benchmarks --package snowbridge-ethereum-beacon-client
        
  coverage:
    needs: build
    runs-on: ubuntu-20.04
    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: 1
      RUSTFLAGS: -C debuginfo=1
      SKIP_WASM_BUILD: 1
    steps:
      - run: cargo install cargo-tarpaulin
      - run: >-
          cargo tarpaulin 
          --manifest-path parachain/Cargo.toml
          --workspace
          --engine llvm
          --out Xml
          --exclude substrate-call-index
          --exclude snowbridge-query-events
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
        with:
          working-directory: parachain
          files: cobertura.xml

  check-cumulus:
    needs: prepare
    runs-on: ubuntu-20.04
    steps:
      - run: cargo check --manifest-path cumulus/Cargo.toml --release --verbose --package bridge-hub-rococo-runtime